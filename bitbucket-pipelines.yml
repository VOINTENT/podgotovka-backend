image: python:3.8

clone:
  depth: 100

definitions:
  services:
    postgres:
      image: postgres
      variables:
        POSTGRES_DB: $PODGOTOVKA_PRIMARY_DB_NAME
        POSTGRES_USER: $PODGOTOVKA_DB_USER
        POSTGRES_PASSWORD: $PODGOTOVKA_DB_PASSWORD

pipelines:
  pull-requests:
    '**':
      - step:
          name: Primary testing and linting
          script:
            - pytest services/core/tests -vs
          services:
            - postgres

  branches:
    develop:
      - step:
          name: Testing and linting
          deployment: Test
          script:
           - python3 -V
           - pip3 install -r ./services/core/requirements.txt
           - flake8 --ignore=E501,W293,W503 ./services/core/src

           - echo 'Creating db schema...'
           - cd services/core && alembic upgrade head && cd ../..

           - echo 'Running tests...'
           - pytest services/core/tests -vs

          services:
            - postgres

      - step:
          name: Deploying code to development server
          deployment: Staging
          script:
            - ssh $USER@$HOST "rm -rf services && rm -rf configs"
            - pipe: atlassian/rsync-deploy:0.4.3
              variables:
                USER: $USER
                SERVER: $HOST
                REMOTE_PATH: '~'
                LOCAL_PATH: './services ./assets/dev/configs'

            - echo 'Installing requirements...'
            - ssh $USER@$HOST "~/.python/bin/python3.9 -m venv ~/services/core/venv"
            - ssh $USER@$HOST "~/services/core/venv/bin/pip install -U pip setuptools"
            - ssh $USER@$HOST "~/services/core/venv/bin/pip install -r ~/services/core/requirements.txt"

            - echo 'Applying migrations...'
            - ssh $USER@$HOST "export PODGOTOVKA_DB_HOST=$PODGOTOVKA_DB_HOST &&
              export PODGOTOVKA_DB_PORT=$PODGOTOVKA_DB_PORT &&
              export PODGOTOVKA_DB_USER=$PODGOTOVKA_DB_USER &&
              export PODGOTOVKA_DB_PASSWORD=$PODGOTOVKA_DB_PASSWORD &&
              cd ~/services/core && venv/bin/alembic upgrade head && cd ../.."

            - echo 'Updating supervisor configs...'
            - myenv="PODGOTOVKA_API_TITLE=\"$PODGOTOVKA_API_TITLE\",
              PODGOTOVKA_API_DESCRIPTION=\"$PODGOTOVKA_API_DESCRIPTION\",
              PODGOTOVKA_API_VERSION=\"$PODGOTOVKA_API_VERSION\",
              PODGOTOVKA_DEBUG=\"$PODGOTOVKA_DEBUG\",
              PODGOTOVKA_DB_HOST=\"$PODGOTOVKA_DB_HOST\",
              PODGOTOVKA_DB_PORT=\"$PODGOTOVKA_DB_PORT\",
              PODGOTOVKA_DB_USER=\"$PODGOTOVKA_DB_USER\",
              PODGOTOVKA_DB_PASSWORD=\"$PODGOTOVKA_DB_PASSWORD\",
              PODGOTOVKA_PRIMARY_DB_NAME=\"$PODGOTOVKA_PRIMARY_DB_NAME\",
              PODGOTOVKA_LOGS_DB_NAME=\"$PODGOTOVKA_LOGS_DB_NAME\",
              PODGOTOVKA_FILES_LINK=\"$PODGOTOVKA_FILES_LINK\",
              PODGOTOVKA_SECRET_KEY=\"$PODGOTOVKA_SECRET_KEY\",
              PODGOTOVKA_ENCRYPT_ALGORITHM=\"$PODGOTOVKA_ENCRYPT_ALGORITHM\",
              PODGOTOVKA_CURRENT_URL=\"$PODGOTOVKA_CURRENT_URL\",
              PODGOTOVKA_IS_TEST=\"$PODGOTOVKA_IS_TEST\",
              PODGOTOVKA_VK_APP_ID=\"$PODGOTOVKA_VK_APP_ID\",
              PODGOTOVKA_VK_APP_SECREY_KEY=\"$PODGOTOVKA_VK_APP_SECREY_KEY\",
              PODGOTOVKA_FILES_LINK=\"$PODGOTOVKA_FILES_LINK\""

            - ssh $USER@$HOST "echo 'environment=$myenv' >> ~/configs/supervisor/core.conf"
            - ssh $USER_ROOT@$HOST "service supervisor restart"

            - echo 'Sending message to slack...'
            - git_log='git log -n 1'
            - author_name=$($git_log --pretty=format:"%an")
            - title_message=$($git_log --pretty=format:"%s")
            - text_message=$($git_log --pretty=format:"%b")
            - pip3 install -r ./helpers/notifier/requirements.txt
#            - python3 ./helpers/notifier/app.py "$SLACK_API_TOKEN" "proj-podgotovka" "$author_name" "$title_message" "$text_message" "#36a64f"
